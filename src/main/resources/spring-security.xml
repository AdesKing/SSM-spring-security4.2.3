<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.AdesK.*" />
    <!-- 开发环境可以放置 <debug /> 配置，会输出详细Security处理日志，正式环境建议屏蔽 <debug /> 配置
    <debug />-->




<!--设置那些资源可以访问，那些需要权限才能访问-->
    <http auto-config="true" use-expressions="true" >
        <intercept-url pattern="/login" access="permitAll" />
        <intercept-url pattern="/access_Denied" access="permitAll" />
        <intercept-url pattern="/WEB-INF/**" access="ROLE_USER" />
        <!--把相应的目录的资源设置权限-->
        <intercept-url pattern="/WEB-INF/views/**" access="isAuthenticated()" />
        <intercept-url pattern="/**" access="isAuthenticated()" />
        <!--起始页，前提必须要permitall-->
        <form-login
                login-page="/login"
                username-parameter="username"
                password-parameter="password"
                login-processing-url="/index"
                authentication-failure-url="/access_Denied"
                 authentication-success-forward-url="/index"/>
              <!--是否允许多用户用一个账号登陆-->
        <session-management >
            <concurrency-control max-sessions="1"
                                 error-if-maximum-exceeded="true" />
        </session-management>
        <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"></custom-filter>
        <csrf disabled="true"/>
    </http>

    <authentication-manager alias="MyAuthenticationManager">
        <authentication-provider user-service-ref="myUserDetailService">
            <!--如果用户的密码采用加密的话 <password-encoder hash="md5" /> -->
        </authentication-provider>
    </authentication-manager>
<!--可以用注解开发-->
    <beans:bean id="mySecurityFilter" class="com.AdesK.security.MySecurityFilter">
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager"/>
        <beans:property name="authenticationManager" ref="MyAuthenticationManager"/>

    </beans:bean>

    <beans:bean id="myUserDetailService" class="com.AdesK.security.MyUserDetailService"/>

    <beans:bean id="mySecurityMetadataSource" class="com.AdesK.security.MySecurityMetadataSource"/>
  <!--  <beans:bean id="myAuthenticationFilter" class="com.AdesK.security.MyAuthenticationFilter"/>-->
    <beans:bean id="myAccessDecisionManager" class="com.AdesK.security.MyAccessDecisionManager"/>

</beans:beans>